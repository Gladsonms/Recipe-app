{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","text","src","alt","srcset","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yQAkBeA,EAhBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxC,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKN,IACL,6BACGG,EAAYI,KAAI,SAACJ,GAAD,OACf,6BAAKA,EAAYK,YAGrB,4BAAIP,IACJ,qBAAKG,UAAWC,IAAMH,MAAOO,IAAKP,EAAOQ,IAAI,GAAGC,OAAO,SCsC9CC,EA7CL,WACR,IAED,EAA6BC,mBAAS,IAAtC,mBAASC,EAAT,KAAiBC,EAAjB,KACA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,WAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACCC,qBAAU,WACRC,MAEA,CAACH,IACH,IAAMG,EAAU,uCAAE,8BAAAC,EAAA,sEACEC,MAAM,mCAAD,OAAoCL,EAApC,mBAVZ,WAUY,oBATX,qCAQI,cACdM,EADc,gBAEFA,EAASC,OAFP,OAEdC,EAFc,OAGpBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJG,2CAAF,qDAchB,OAAO,sBAAKvB,UAAU,MAAf,UACN,uBAAM0B,SANW,SAACC,GACjBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAGgBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAVxC,SAACJ,GACnBd,EAAUc,EAAEK,OAAOF,QAS+DG,YAAY,yBAC7F,wBAAQjC,UAAU,eAAe6B,KAAK,SAAtC,uBAIF,qBAAK7B,UAAU,UAAf,SAA0BU,EAAQP,KAAI,SAAAD,GAAM,OAE1C,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,gBC3BTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.7bfd85f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./recipe.module.css\";\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <h1>{title}</h1>\r\n      <ol>\r\n        {ingredients.map((ingredients) => (\r\n          <li>{ingredients.text}</li>\r\n        ))}\r\n      </ol>\r\n      <p>{calories}</p>\r\n      <img className={style.image} src={image} alt=\"\" srcset=\"\" />\r\n    </div>\r\n  );\r\n};\r\n//return <div></div>;\r\n\r\nexport default Recipe;\r\n","\nimport \"./App.css\";\nimport {useEffect,useState,UseState} from 'react'\nimport Recipe from \"./Recipe\"\n\nconst App=()=> {\n  const APP_ID='ae7e10e6';\n  const APP_KEY='5b46f4b8dd1a5c9639322127e4dbe1c4';\n const [  recipes,setRecipes]=useState([])\n const [search,setSearch]=useState('')\n const [query,setQuery] =useState('chicken')\n  useEffect(()=>{\n    getRecipes();\n\n  },[query])\n  const getRecipes= async()=>{\nconst response =await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\nconst data= await response.json();\nsetRecipes(data.hits);\nconsole.log(data.hits);\n  }\n  const updateSearch =(e)=>{\n    setSearch(e.target.value)\n  }\n  const getSearch = (e)=>{\n    e.preventDefault();\n    setQuery(search)\n    setSearch('')\n  }\n  return <div className=\"App\">\n   <form onSubmit={getSearch} className=\"search-form\">\n     <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search food here....\"/>\n     <button className=\"seach-button\" type=\"submit\" >Search</button>\n\n     \n   </form>\n   <div className=\"recipes\">{recipes.map(recipe => (\n     \n     <Recipe \n     key={recipe.recipe.label}\n     title={recipe.recipe.label}\n     calories={recipe.recipe.calories}\n     image={recipe.recipe.image}\n     ingredients={recipe.recipe.ingredients}\n     />\n   ))}</div>\n   \n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1ozV5\",\"image\":\"recipe_image__209uI\"};"],"sourceRoot":""}